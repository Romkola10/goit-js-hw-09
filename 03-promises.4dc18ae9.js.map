{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAaF,SAASC,cAAc,gBACpCE,EAAYH,SAASC,cAAc,eACnCG,EAAcJ,SAASC,cAAc,iBAC3C,IAAII,EAAW,EAwBf,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,CAAEG,SAAAT,E,MAAUC,IAEpBM,EAAO,CAAEE,SAAAT,E,MAAUC,MAEpBA,MA/BPT,EAAKkB,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAENJ,YAAW,KACT,IAAK,IAAIK,EAAI,EAAGA,EAAIhB,EAAYiB,MAAOD,GAAK,EAAG,CAC7C,MAAME,GAAQpB,EAAWmB,QAASlB,EAAUkB,MAAQD,EACpDf,EAAWe,EAAI,EACfd,EAAcD,EAAUiB,GACrBC,MAAK,EAAGP,SAAAQ,EAAQhB,MAAEA,MACjBiB,QAAQC,IAAI,uBAAqBF,QAAiBhB,QAClDX,EAAA8B,OAAOC,QAAQ,uBAAqBJ,QAAiBhB,WAEtDqB,OAAM,EAAGb,SAAAc,EAAQtB,MAAEA,MAClBiB,QAAQC,IAAI,sBAAoBI,QAAiBtB,QACjDX,EAAA8B,OAAOI,QAAQ,sBAAoBD,QAAetB,cAGvDN,EAAWmB","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nconst delayInput = document.querySelector('[name=delay]');\nconst stepInput = document.querySelector('[name=step]');\nconst amountInput = document.querySelector('[name=amount]');\nlet position = 0;\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  setTimeout(() => {\n    for (let i = 0; i < amountInput.value; i += 1) {\n      const step = +delayInput.value + +stepInput.value * i;\n      position = i + 1;\n      createPromise(position, step)\n        .then(({ position, delay }) => {\n          console.log(`✅ Fulfilled promise ${position} in ${delay} ms`);\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay} ms`);\n        })\n        .catch(({ position, delay }) => {\n          console.log(`❌ Rejected promise ${position} in ${delay} ms`);\n          Notify.failure(`❌ Rejected promise ${position} in ${delay} ms`);\n        });\n    }\n  }, delayInput.value);\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delayInput","$47d4ff9957288465$var$stepInput","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$position","$47d4ff9957288465$var$createPromise","position3","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","addEventListener","event","preventDefault","i","value","step","then","position1","console","log","Notify","success","catch","position2","failure"],"version":3,"file":"03-promises.4dc18ae9.js.map"}